name: unity build plugins (custom backend)

on: 
  workflow_dispatch:
    inputs:
      backend:
        description: 'js backend'     
        required: true

env:
  RUNID: 613573412

jobs:
  android:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Get backend artifact remote
        run: echo "$(cat unity/native_src/cmake/${{ github.event.inputs.backend }}/backend.rc)" >> $GITHUB_ENV
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ env.BACKEND_ARTIFACT_WORKFLOW }}
          name: ${{ env.BACKEND_ARTIFACT_NAME }}
          repo: ${{ env.BACKEND_ARTIFACT_REPO }}
          path: unity/native_src/
      - name: fix temporary
        run: |
          mv unity/native_src/nodejs unity/native_src/nodejs_17 || echo 'not node'
          mv unity/native_src/v8 unity/native_src/v8_9.6 || echo 'not v8'
      - name: Install NDK
        run: |
          cd ~
          wget -O NDK -q https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip
          sudo apt install unzip -y
          unzip -q NDK
          export ANDROID_NDK=~/android-ndk-r21b
      - name: Build
        run: |
          ls ~/android-ndk-r21b
          cd unity/native_src
          chmod 777 make_android.sh
          ./make_android.sh ${{ github.event.inputs.backend }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins(${{ github.event.inputs.backend }})
  ios:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Get backend artifact remote
        run: echo "$(cat unity/native_src/cmake/${{ github.event.inputs.backend }}/backend.rc)" >> $GITHUB_ENV
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ env.BACKEND_ARTIFACT_WORKFLOW }}
          name: ${{ env.BACKEND_ARTIFACT_NAME }}
          repo: ${{ env.BACKEND_ARTIFACT_REPO }}
          path: unity/native_src/
      - name: fix temporary
        run: |
          mv unity/native_src/nodejs unity/native_src/nodejs_17 || echo 'not node'
          mv unity/native_src/v8 unity/native_src/v8_9.6 || echo 'not v8'
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_ios.sh ${{ github.event.inputs.backend }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins(${{ github.event.inputs.backend }})
  osx_arm64:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2
      - name: Get backend artifact remote
        run: echo "$(cat unity/native_src/cmake/${{ github.event.inputs.backend }}/backend.rc)" >> $GITHUB_ENV
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ env.BACKEND_ARTIFACT_WORKFLOW }}
          name: ${{ env.BACKEND_ARTIFACT_NAME }}
          repo: ${{ env.BACKEND_ARTIFACT_REPO }}
          path: unity/native_src/
      - name: fix temporary
        run: |
          mv unity/native_src/nodejs unity/native_src/nodejs_17 || echo 'not node'
          mv unity/native_src/v8 unity/native_src/v8_9.6 || echo 'not v8'
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_osx_arm64.sh ${{ github.event.inputs.backend }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins(${{ github.event.inputs.backend }})
  osx:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Get backend artifact remote
        run: echo "$(cat unity/native_src/cmake/${{ github.event.inputs.backend }}/backend.rc)" >> $GITHUB_ENV
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ env.BACKEND_ARTIFACT_WORKFLOW }}
          name: ${{ env.BACKEND_ARTIFACT_NAME }}
          repo: ${{ env.BACKEND_ARTIFACT_REPO }}
          path: unity/native_src/
      - name: fix temporary
        run: |
          mv unity/native_src/nodejs unity/native_src/nodejs_17 || echo 'not node'
          mv unity/native_src/v8 unity/native_src/v8_9.6 || echo 'not v8'
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_osx.sh ${{ github.event.inputs.backend }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins(${{ github.event.inputs.backend }})
  windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
      - name: Get backend artifact remote
        run: echo "$(cat unity/native_src/cmake/${{ github.event.inputs.backend }}/backend.rc)" >> $GITHUB_ENV
        shell: bash
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ env.BACKEND_ARTIFACT_WORKFLOW }}
          name: ${{ env.BACKEND_ARTIFACT_NAME }}
          repo: ${{ env.BACKEND_ARTIFACT_REPO }}
          path: unity/native_src/
      - name: fix temporary
        run: |
          mv unity/native_src/v8 unity/native_src/v8_9.6 || echo 'not v8'
          mv unity/native_src/nodejs unity/native_src/nodejs_17 || echo 'not node'
        shell: bash
      - name: Build
        run: |
          cd unity\native_src
          .\make_win64.bat ${{ github.event.inputs.backend }}
          # .\make_win32.bat ${{ github.event.inputs.backend }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins(${{ github.event.inputs.backend }})
  linux64:
    runs-on: ubuntu-latest

    steps:
      - name: Install libc++-dev
        run: |
          sudo apt-get install clang
          sudo apt-get install libc++-dev
          sudo apt-get install libc++abi-dev
      - uses: actions/checkout@v2
      - name: Get backend artifact remote
        run: echo "$(cat unity/native_src/cmake/${{ github.event.inputs.backend }}/backend.rc)" >> $GITHUB_ENV
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ env.BACKEND_ARTIFACT_WORKFLOW }}
          name: ${{ env.BACKEND_ARTIFACT_NAME }}
          repo: ${{ env.BACKEND_ARTIFACT_REPO }}
          path: unity/native_src/
      - name: fix temporary
        run: |
          mv unity/native_src/nodejs unity/native_src/nodejs_17 || echo 'not node'
          mv unity/native_src/v8 unity/native_src/v8_9.6 || echo 'not v8'
      - name: Build
        run: |
          cd unity/native_src
          chmod 777 make_linux64.sh
          ./make_linux64.sh ${{ github.event.inputs.backend }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins(${{ github.event.inputs.backend }})
 